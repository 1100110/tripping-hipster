" Vim defaults
" These are sorted by 'category'
" Basic Terminal
        set clipboard+=unnamedplus
        set ttyfast     
        set lazyredraw  
        set mouse=a     
        set ttymouse=xterm
        set term=screen-256color
        set shell=bash
        set t_Co=256    
        set background=dark
" UTF8 is my system default encoding.
        set nocompatible 
        set encoding=utf8
        scriptencoding utf-8
" Tab Behaviour
        set tabstop=4
        set softtabstop=4
        set shiftwidth=4
        set autoindent
        set smartindent
        set expandtab
" Search Behaviour
        set ignorecase
        set smartcase
        set hlsearch
        set incsearch
        set scrolloff=6
" Backups and Undo
        set nobackup
        set noswapfile
        if has('persistent_undo')
            set undofile           " So is persistent undo ...
            set undolevels=1000     " Maximum number of changes that can be undone
            set undoreload=10000    " Maximum number lines to save for undo on a buffer reload
            " Store swap files in fixed location, not current directory.
            set dir=~/.vimswap//,/var/tmp//,/tmp//,.
            set undodir=~/.vim/undo/
        endif
        set history=1000
" LineFolding
        set foldenable
        set foldmethod=indent
        set foldlevel=1
        set wrap
        set whichwrap+=b,s,h,l,<,>,[,]
        set backspace=indent,eol,start
" WildMenu
        set wildmenu
        set wildmode=list:longest,full
        set wildignore=*.o,*.git,*.a,*.so,*.pyc
        set showcmd
        set showmode
        set completeopt=menu,preview,longest
        set omnifunc=syntaxcomplete#Complete

        let g:SuperTabDefaultCompletionType = "context"
        let g:neocomplcache_enable_at_startup = 1
        let g:neocomplcache_enable_camel_case_completion = 1
        let g:neocomplcache_enable_smart_case = 1
        let g:neocomplcache_enable_underbar_completion = 1
        let g:neocomplcache_enable_auto_delimiter = 1

        " Plugin key-mappings.
        imap <C-k> <Plug>(neosnippet_expand_or_jump)
        smap <C-k> <Plug>(neosnippet_expand_or_jump)
        inoremap <expr><C-g> neocomplcache#undo_completion()

        " <TAB>: completion.
        inoremap <expr><TAB> pumvisible() ? "\<C-n>" : "\<TAB>"
        inoremap <expr><S-TAB> pumvisible() ? "\<C-p>" : "\<TAB>"    

        " <C-h>, <BS>: close popup and delete backword char.
        inoremap <expr><C-y> neocomplcache#close_popup()

        " Toggle search highlighting
        nmap <silent> <leader>/ :set invhlsearch<CR>

        set ruler
        set relativenumber
        set cursorline  
        set colorcolumn=80
        set pastetoggle=<F9>
        set laststatus=2

""""""""""""""""""""""""""""""""
" Mappings
"+++++++++++++++++++++++++++++++
        let mapleader="-"
        let g:mapleader="-"

        let g:neocomplcache_enable_at_startup=1

        nnoremap ; :
        nmap Y d$ 
        nmap J 4j
        nmap K 4k
        "nmap <leader>cs 
        " Easy paste mode
        map <leader>pp :setlocal paste!<CR>
        " Easily Edit .vimrc
        nmap <silent> <leader>ve :e  ~/.vimrc<CR>
        nmap <silent> <leader>vs :so ~/.vimrc<CR>
        " au BufWritePost .vimrc so ~/.vimrc
        " Easy Undo
        nnoremap <leader>u <esc>u
        nnoremap <leader>r <C-r> 
        " Easy Ctrl-z
        nnoremap <leader>d <C-z>
        " Easy split window.
        nnoremap <leader>- <esc>:split<CR>
        nnoremap <leader>= <esc>:vsplit<CR>

        cmap w!! w !sudo tee % >/dev/null

        let g:T_AUTHOR = "Jude Young"
        let g:T_AUTHOR_EMAIL = "0b1100110 <gmail>"
        let g:T_DATE_FORMAT = "%c"

        nnoremap <silent> <leader>gs :Gstatus<CR>
        nnoremap <silent> <leader>gd :Gdiff<CR>
        nnoremap <silent> <leader>gc :Gcommit<CR>
        nnoremap <silent> <leader>gb :Gblame<CR>
        nnoremap <silent> <leader>gl :Glog<CR>
        nnoremap <silent> <leader>gp :Git push<CR>

""""""""""""""""""""""""""""""""
" Vundle
"+++++++++++++++++++++++++++++++
        set rtp+=~/.vim/bundle/vundle/
        set rtp+=~/.vim/bundle/powerline/powerline/bindings/vim/
        filetype on
        filetype off
        call vundle#rc()
        " Vundle
        Bundle 'gmarik/vundle'
        Bundle 'gmarik/github-search.vim'
        " ColorSchemes
        " My Favorite!!
        Bundle 'molokai'
        Bundle 'vim-scripts/xterm-color-table.vim'
        Bundle 'godlygeek/csapprox'
        Bundle 'tpope/vim-colors-solarized'
        Bundle 'spf13/vim-colors'  
        Bundle 'flazz/vim-colorschemes'
        " Utilities
        Bundle 'tpope/vim-fugitive'
        Bundle 'tpope/vim-markdown'
        Bundle 'Lokaltog/vim-powerline'
        Bundle 'scrooloose/nerdtree'
        Bundle 'scrooloose/nerdcommenter'
        Bundle 'scrooloose/syntastic' 
        Bundle 'vim-scripts/license-loader'
        Bundle 'vim-scripts/gnupg-symmetric.vim'
        Bundle 'ervandew/supertab'
        Bundle 'JesseKPhillips/d.vim'
        Bundle 'vim-ruby/vim-ruby'
        filetype plugin indent on

syntax on
colorscheme molokai 
" Solarized
"let g:solarized_menu=0
"let g:solarized_termcolors=256
"let g:solarized_italic=0
"let g:solarized_underline=1
"let g:solarized_termtrans=0
"colorscheme solarized
